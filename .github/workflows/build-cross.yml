name: Build binaries for additional platform

on:
  push:
    tags:
    - '@serialport/bindings@[1-9]+.[0-9]+.[0-9]+'
    - 'force-build'
jobs:
  linux-arm64:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        target-node: [10, 12, 14, 16]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            TARGET_TOOLCHAIN_ARCH=aarch64
            PKG_FETCH_OPTION_a=arm64
            PKG_FETCH_OPTION_n=node${{ matrix.target-node }}
          context: .
          file: ./Dockerfile.linuxcross
          platforms: linux/amd64
          outputs: type=tar,dest=../out.tar

      - name: Extract binaries from Docker image
        run: |
          tar xvf ../out.tar root/pkg-fetch/dist
      - name: Check if binary is compiled
        id: check_file
        run: |
          (test -f root/pkg-fetch/dist/*.sha256sum && echo ::set-output name=EXISTS::true) || echo ::set-output name=EXISTS::false
      - uses: actions/upload-artifact@v2
        if: steps.check_file.outputs.EXISTS == 'true'
        with:
          name: node${{ matrix.target-node }}-linux-arm64
          path: root/pkg-fetch/dist/*
